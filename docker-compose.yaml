version: "3.8"
   
services:
  nginx:
    image: nginx:1.21-alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8888:80"
    depends_on:
      - notification_admin
      - notification_api
    networks:
      - web-service

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: notification_rabbitmq
    env_file:
      - notification_api/.env
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend_network

  notify_db:
    image: postgres:13.0
    container_name: notify_db
    volumes:
      - ./admin/data:/var/lib/postgresql/data/
    env_file:
      - ./admin/.env.prod
    networks:
      - backend_network

  notification_api:
    build:
      context: notification_api
      dockerfile: Dockerfile.prod
    container_name: notification_api
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    volumes:
      - ./notification_api/src/app:/usr/src/app
    env_file:
      - ./notification_api/.env
    networks:
      - backend_network
      - web-service

  notification_admin:
    build:
      context: ./admin/notification_admin
      dockerfile: Dockerfile.prod
    container_name: notification_admin
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    env_file:
      - ./admin/.env.prod
    depends_on:
      - notify_db
    networks:
      - backend_network
      - web-service

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - backend_network

  redis:
    image: redis:6.2.5
    container_name: notification_redis
    env_file:
      - ./notification_api/.env
    volumes:
      - ./redis/conf/etc:/usr/local/etc/redis
    expose:
      - "6379"
    command:
      - redis-server
    networks:
      - backend_network

  db-auth:
    image: postgres:13.0
    container_name: db-auth
    volumes:
      - ./auth-api/data:/var/lib/postgresql/data
    env_file:
      - ./auth-api/.env
    ports:
      - "5432:5432"
    networks:
      - backend_network

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile.api.dev
    container_name: auth_api
    ports:
      - "8088:8088"
    depends_on:
      - db-auth
      - redis-auth
      - jaeger
    volumes:
      - ./auth-api/src/app:/usr/src/app
      - ./auth-api/migrations:/usr/src/migrations
    env_file:
      - ./auth-api/.env
    networks:
      - backend_network
      - web-service


  redis-auth:
    image: redis:6.2.5
    container_name: redis-auth
    env_file:
      - ./auth-api/.env
    ports:
      - "6379:6379"
    command:
      - redis-server
    networks:
      - backend_network

networks:
  backend_network:
  web-service:

volumes:
  static_volume:
  media_volume:
